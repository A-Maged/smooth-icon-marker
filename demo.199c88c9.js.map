{"mappings":"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","sources":["./home/a-maged/development/smooth-icon-marker/src/demo/node_modules/@parcel/scope-hoisting/lib/helpers.js","../../node_modules/denque/index.js","../utils.ts","../Marker.ts","./fakeData.json","./index.ts"],"sourcesContent":[null,"'use strict';\n\n/**\n * Custom implementation of a double ended queue.\n */\nfunction Denque(array) {\n  this._head = 0;\n  this._tail = 0;\n  this._capacityMask = 0x3;\n  this._list = new Array(4);\n  if (Array.isArray(array)) {\n    this._fromArray(array);\n  }\n}\n\n/**\n * -------------\n *  PUBLIC API\n * -------------\n */\n\n/**\n * Returns the item at the specified index from the list.\n * 0 is the first element, 1 is the second, and so on...\n * Elements at negative values are that many from the end: -1 is one before the end\n * (the last element), -2 is two before the end (one before last), etc.\n * @param index\n * @returns {*}\n */\nDenque.prototype.peekAt = function peekAt(index) {\n  var i = index;\n  // expect a number or return undefined\n  if ((i !== (i | 0))) {\n    return void 0;\n  }\n  var len = this.size();\n  if (i >= len || i < -len) return undefined;\n  if (i < 0) i += len;\n  i = (this._head + i) & this._capacityMask;\n  return this._list[i];\n};\n\n/**\n * Alias for peakAt()\n * @param i\n * @returns {*}\n */\nDenque.prototype.get = function get(i) {\n  return this.peekAt(i);\n};\n\n/**\n * Returns the first item in the list without removing it.\n * @returns {*}\n */\nDenque.prototype.peek = function peek() {\n  if (this._head === this._tail) return undefined;\n  return this._list[this._head];\n};\n\n/**\n * Alias for peek()\n * @returns {*}\n */\nDenque.prototype.peekFront = function peekFront() {\n  return this.peek();\n};\n\n/**\n * Returns the item that is at the back of the queue without removing it.\n * Uses peekAt(-1)\n */\nDenque.prototype.peekBack = function peekBack() {\n  return this.peekAt(-1);\n};\n\n/**\n * Returns the current length of the queue\n * @return {Number}\n */\nObject.defineProperty(Denque.prototype, 'length', {\n  get: function length() {\n    return this.size();\n  }\n});\n\n/**\n * Return the number of items on the list, or 0 if empty.\n * @returns {number}\n */\nDenque.prototype.size = function size() {\n  if (this._head === this._tail) return 0;\n  if (this._head < this._tail) return this._tail - this._head;\n  else return this._capacityMask + 1 - (this._head - this._tail);\n};\n\n/**\n * Add an item at the beginning of the list.\n * @param item\n */\nDenque.prototype.unshift = function unshift(item) {\n  if (item === undefined) return this.size();\n  var len = this._list.length;\n  this._head = (this._head - 1 + len) & this._capacityMask;\n  this._list[this._head] = item;\n  if (this._tail === this._head) this._growArray();\n  if (this._head < this._tail) return this._tail - this._head;\n  else return this._capacityMask + 1 - (this._head - this._tail);\n};\n\n/**\n * Remove and return the first item on the list,\n * Returns undefined if the list is empty.\n * @returns {*}\n */\nDenque.prototype.shift = function shift() {\n  var head = this._head;\n  if (head === this._tail) return undefined;\n  var item = this._list[head];\n  this._list[head] = undefined;\n  this._head = (head + 1) & this._capacityMask;\n  if (head < 2 && this._tail > 10000 && this._tail <= this._list.length >>> 2) this._shrinkArray();\n  return item;\n};\n\n/**\n * Add an item to the bottom of the list.\n * @param item\n */\nDenque.prototype.push = function push(item) {\n  if (item === undefined) return this.size();\n  var tail = this._tail;\n  this._list[tail] = item;\n  this._tail = (tail + 1) & this._capacityMask;\n  if (this._tail === this._head) {\n    this._growArray();\n  }\n\n  if (this._head < this._tail) return this._tail - this._head;\n  else return this._capacityMask + 1 - (this._head - this._tail);\n};\n\n/**\n * Remove and return the last item on the list.\n * Returns undefined if the list is empty.\n * @returns {*}\n */\nDenque.prototype.pop = function pop() {\n  var tail = this._tail;\n  if (tail === this._head) return undefined;\n  var len = this._list.length;\n  this._tail = (tail - 1 + len) & this._capacityMask;\n  var item = this._list[this._tail];\n  this._list[this._tail] = undefined;\n  if (this._head < 2 && tail > 10000 && tail <= len >>> 2) this._shrinkArray();\n  return item;\n};\n\n/**\n * Remove and return the item at the specified index from the list.\n * Returns undefined if the list is empty.\n * @param index\n * @returns {*}\n */\nDenque.prototype.removeOne = function removeOne(index) {\n  var i = index;\n  // expect a number or return undefined\n  if ((i !== (i | 0))) {\n    return void 0;\n  }\n  if (this._head === this._tail) return void 0;\n  var size = this.size();\n  var len = this._list.length;\n  if (i >= size || i < -size) return void 0;\n  if (i < 0) i += size;\n  i = (this._head + i) & this._capacityMask;\n  var item = this._list[i];\n  var k;\n  if (index < size / 2) {\n    for (k = index; k > 0; k--) {\n      this._list[i] = this._list[i = (i - 1 + len) & this._capacityMask];\n    }\n    this._list[i] = void 0;\n    this._head = (this._head + 1 + len) & this._capacityMask;\n  } else {\n    for (k = size - 1 - index; k > 0; k--) {\n      this._list[i] = this._list[i = ( i + 1 + len) & this._capacityMask];\n    }\n    this._list[i] = void 0;\n    this._tail = (this._tail - 1 + len) & this._capacityMask;\n  }\n  return item;\n};\n\n/**\n * Remove number of items from the specified index from the list.\n * Returns array of removed items.\n * Returns undefined if the list is empty.\n * @param index\n * @param count\n * @returns {array}\n */\nDenque.prototype.remove = function remove(index, count) {\n  var i = index;\n  var removed;\n  var del_count = count;\n  // expect a number or return undefined\n  if ((i !== (i | 0))) {\n    return void 0;\n  }\n  if (this._head === this._tail) return void 0;\n  var size = this.size();\n  var len = this._list.length;\n  if (i >= size || i < -size || count < 1) return void 0;\n  if (i < 0) i += size;\n  if (count === 1 || !count) {\n    removed = new Array(1);\n    removed[0] = this.removeOne(i);\n    return removed;\n  }\n  if (i === 0 && i + count >= size) {\n    removed = this.toArray();\n    this.clear();\n    return removed;\n  }\n  if (i + count > size) count = size - i;\n  var k;\n  removed = new Array(count);\n  for (k = 0; k < count; k++) {\n    removed[k] = this._list[(this._head + i + k) & this._capacityMask];\n  }\n  i = (this._head + i) & this._capacityMask;\n  if (index + count === size) {\n    this._tail = (this._tail - count + len) & this._capacityMask;\n    for (k = count; k > 0; k--) {\n      this._list[i = (i + 1 + len) & this._capacityMask] = void 0;\n    }\n    return removed;\n  }\n  if (index === 0) {\n    this._head = (this._head + count + len) & this._capacityMask;\n    for (k = count - 1; k > 0; k--) {\n      this._list[i = (i + 1 + len) & this._capacityMask] = void 0;\n    }\n    return removed;\n  }\n  if (i < size / 2) {\n    this._head = (this._head + index + count + len) & this._capacityMask;\n    for (k = index; k > 0; k--) {\n      this.unshift(this._list[i = (i - 1 + len) & this._capacityMask]);\n    }\n    i = (this._head - 1 + len) & this._capacityMask;\n    while (del_count > 0) {\n      this._list[i = (i - 1 + len) & this._capacityMask] = void 0;\n      del_count--;\n    }\n    if (index < 0) this._tail = i;\n  } else {\n    this._tail = i;\n    i = (i + count + len) & this._capacityMask;\n    for (k = size - (count + index); k > 0; k--) {\n      this.push(this._list[i++]);\n    }\n    i = this._tail;\n    while (del_count > 0) {\n      this._list[i = (i + 1 + len) & this._capacityMask] = void 0;\n      del_count--;\n    }\n  }\n  if (this._head < 2 && this._tail > 10000 && this._tail <= len >>> 2) this._shrinkArray();\n  return removed;\n};\n\n/**\n * Native splice implementation.\n * Remove number of items from the specified index from the list and/or add new elements.\n * Returns array of removed items or empty array if count == 0.\n * Returns undefined if the list is empty.\n *\n * @param index\n * @param count\n * @param {...*} [elements]\n * @returns {array}\n */\nDenque.prototype.splice = function splice(index, count) {\n  var i = index;\n  // expect a number or return undefined\n  if ((i !== (i | 0))) {\n    return void 0;\n  }\n  var size = this.size();\n  if (i < 0) i += size;\n  if (i > size) return void 0;\n  if (arguments.length > 2) {\n    var k;\n    var temp;\n    var removed;\n    var arg_len = arguments.length;\n    var len = this._list.length;\n    var arguments_index = 2;\n    if (!size || i < size / 2) {\n      temp = new Array(i);\n      for (k = 0; k < i; k++) {\n        temp[k] = this._list[(this._head + k) & this._capacityMask];\n      }\n      if (count === 0) {\n        removed = [];\n        if (i > 0) {\n          this._head = (this._head + i + len) & this._capacityMask;\n        }\n      } else {\n        removed = this.remove(i, count);\n        this._head = (this._head + i + len) & this._capacityMask;\n      }\n      while (arg_len > arguments_index) {\n        this.unshift(arguments[--arg_len]);\n      }\n      for (k = i; k > 0; k--) {\n        this.unshift(temp[k - 1]);\n      }\n    } else {\n      temp = new Array(size - (i + count));\n      var leng = temp.length;\n      for (k = 0; k < leng; k++) {\n        temp[k] = this._list[(this._head + i + count + k) & this._capacityMask];\n      }\n      if (count === 0) {\n        removed = [];\n        if (i != size) {\n          this._tail = (this._head + i + len) & this._capacityMask;\n        }\n      } else {\n        removed = this.remove(i, count);\n        this._tail = (this._tail - leng + len) & this._capacityMask;\n      }\n      while (arguments_index < arg_len) {\n        this.push(arguments[arguments_index++]);\n      }\n      for (k = 0; k < leng; k++) {\n        this.push(temp[k]);\n      }\n    }\n    return removed;\n  } else {\n    return this.remove(i, count);\n  }\n};\n\n/**\n * Soft clear - does not reset capacity.\n */\nDenque.prototype.clear = function clear() {\n  this._head = 0;\n  this._tail = 0;\n};\n\n/**\n * Returns true or false whether the list is empty.\n * @returns {boolean}\n */\nDenque.prototype.isEmpty = function isEmpty() {\n  return this._head === this._tail;\n};\n\n/**\n * Returns an array of all queue items.\n * @returns {Array}\n */\nDenque.prototype.toArray = function toArray() {\n  return this._copyArray(false);\n};\n\n/**\n * -------------\n *   INTERNALS\n * -------------\n */\n\n/**\n * Fills the queue with items from an array\n * For use in the constructor\n * @param array\n * @private\n */\nDenque.prototype._fromArray = function _fromArray(array) {\n  for (var i = 0; i < array.length; i++) this.push(array[i]);\n};\n\n/**\n *\n * @param fullCopy\n * @returns {Array}\n * @private\n */\nDenque.prototype._copyArray = function _copyArray(fullCopy) {\n  var newArray = [];\n  var list = this._list;\n  var len = list.length;\n  var i;\n  if (fullCopy || this._head > this._tail) {\n    for (i = this._head; i < len; i++) newArray.push(list[i]);\n    for (i = 0; i < this._tail; i++) newArray.push(list[i]);\n  } else {\n    for (i = this._head; i < this._tail; i++) newArray.push(list[i]);\n  }\n  return newArray;\n};\n\n/**\n * Grows the internal list array.\n * @private\n */\nDenque.prototype._growArray = function _growArray() {\n  if (this._head) {\n    // copy existing data, head to end, then beginning to tail.\n    this._list = this._copyArray(true);\n    this._head = 0;\n  }\n\n  // head is at 0 and array is now full, safe to extend\n  this._tail = this._list.length;\n\n  this._list.length *= 2;\n  this._capacityMask = (this._capacityMask << 1) | 1;\n};\n\n/**\n * Shrinks the internal list array.\n * @private\n */\nDenque.prototype._shrinkArray = function _shrinkArray() {\n  this._list.length >>>= 1;\n  this._capacityMask >>>= 1;\n};\n\n\nmodule.exports = Denque;\n","export const gmaps = google.maps;\n\nexport const gInterpolate = google.maps.geometry.spherical.interpolate;\nexport const gComputeDistanceBetween =\n  google.maps.geometry.spherical.computeDistanceBetween;\n\nexport function sleep(ms: number) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nexport const icon = {\n  path:\n    \"M29.395,0H17.636c-3.117,0-5.643,3.467-5.643,6.584v34.804c0,3.116,2.526,5.644,5.643,5.644h11.759   c3.116,0,5.644-2.527,5.644-5.644V6.584C35.037,3.467,32.511,0,29.395,0z M34.05,14.188v11.665l-2.729,0.351v-4.806L34.05,14.188z    M32.618,10.773c-1.016,3.9-2.219,8.51-2.219,8.51H16.631l-2.222-8.51C14.41,10.773,23.293,7.755,32.618,10.773z M15.741,21.713   v4.492l-2.73-0.349V14.502L15.741,21.713z M13.011,37.938V27.579l2.73,0.343v8.196L13.011,37.938z M14.568,40.882l2.218-3.336   h13.771l2.219,3.336H14.568z M31.321,35.805v-7.872l2.729-0.355v10.048L31.321,35.805\",\n  // scale: 0.6,\n  scale: 1,\n  fillColor: \"red\",\n  fillOpacity: 1,\n  strokeWeight: 1,\n  strokeOpacity: 1,\n  anchor: new google.maps.Point(22, 35),\n  // rotation: 80, //<-- Car angle\n};\n","import Denque from \"denque\";\nimport { icon, gInterpolate, gComputeDistanceBetween, gmaps } from \"./utils\";\nimport { MarkerOptions, LatLng } from \"./types\";\n\nexport default class Marker extends gmaps.Marker implements MarkerOptions {\n  currentDestination: LatLng | null;\n  durationMs: number;\n  hasTrailLine?: boolean;\n  trailLine: google.maps.Polyline | null;\n\n  private bigSteps: Denque;\n  private increamentByFraction: number;\n  private loopIndex: number;\n\n  constructor({\n    durationMs = 100,\n    hasTrailLine = true,\n    ...options\n  }: MarkerOptions) {\n    options.icon = icon;\n    super(options);\n\n    this.currentDestination = null;\n    this.durationMs = durationMs;\n    this.hasTrailLine = hasTrailLine;\n    this.trailLine = this.initTrailLine();\n\n    this.bigSteps = new Denque();\n    this.increamentByFraction = 0;\n    this.loopIndex = this.loopIndexInitState() as number;\n  }\n\n  animatedSetPosition(nextStep: LatLng) {\n    this.bigSteps.push(nextStep);\n\n    this.animate();\n  }\n\n  animate() {\n    this.currentDestination = this.currentDestination ?? this.bigSteps.shift();\n    let start = this.getPosition() as LatLng;\n    let end = this.currentDestination as LatLng;\n    // let distance = gComputeDistanceBetween(start, end);\n    this.loopIndex -= 1;\n\n    if (this.loopIndex <= 0) {\n      /* reset */\n      this.currentDestination = this.bigSteps.shift();\n      this.increamentByFraction = 0;\n      this.loopIndex = this.loopIndexInitState();\n    } else {\n      /* move a small step */\n      this.increamentByFraction += 100 / (this.durationMs * 6000);\n      const smallStep = gInterpolate(start, end, this.increamentByFraction);\n\n      this.move(smallStep);\n\n      requestAnimationFrame(this.animate.bind(this));\n    }\n  }\n\n  move(position: LatLng) {\n    if (this.currentDestination) this.changeDirection(this.currentDestination);\n\n    this.setPosition(position);\n    this.drawPath(position);\n  }\n\n  changeDirection(newPosition: LatLng) {\n    let currentPosition = this.getPosition();\n\n    if (!currentPosition) return;\n\n    let icon = this.getIcon() as google.maps.Symbol;\n\n    icon.rotation = gmaps.geometry.spherical.computeHeading(\n      currentPosition,\n      newPosition\n    );\n\n    this.setIcon(icon);\n  }\n\n  private drawPath(newPosition: LatLng) {\n    if (!this.hasTrailLine || !this.trailLine) return;\n\n    let newPath = this.trailLine.getPath();\n\n    newPath.push(newPosition);\n\n    this.trailLine.setPath(newPath);\n  }\n\n  private initTrailLine() {\n    return this.hasTrailLine\n      ? new gmaps.Polyline({\n          // strokeOpacity: 0, // hide line\n          path: [],\n          map: this.getMap() as google.maps.Map,\n        })\n      : null;\n  }\n\n  private loopIndexInitState() {\n    return this.durationMs;\n  }\n}\n","[\n  { \"lat\": 35.9588769088931, \"lng\": -115.12207388877869 },\n  { \"lat\": 35.95890730405862, \"lng\": -115.1219826936722 },\n  { \"lat\": 35.958939870294394, \"lng\": -115.12191027402879 },\n  { \"lat\": 35.95894638353994, \"lng\": -115.12184724211696 },\n  { \"lat\": 35.95897569313823, \"lng\": -115.12176409363748 },\n  { \"lat\": 35.95901802920547, \"lng\": -115.1216380298138 },\n  { \"lat\": 35.959036483381524, \"lng\": -115.12157365679744 },\n  { \"lat\": 35.9590592797107, \"lng\": -115.12151062488557 },\n  { \"lat\": 35.95907881941617, \"lng\": -115.12144759297372 },\n  { \"lat\": 35.959109214503975, \"lng\": -115.12137919664384 },\n  { \"lat\": 35.95914395173285, \"lng\": -115.1212812960148 },\n  { \"lat\": 35.959156978189746, \"lng\": -115.12121692299844 },\n  { \"lat\": 35.959183031097076, \"lng\": -115.12116327881814 },\n  { \"lat\": 35.959202570771936, \"lng\": -115.12109622359279 },\n  { \"lat\": 35.959234051349036, \"lng\": -115.12099966406822 },\n  { \"lat\": 35.95924816332782, \"lng\": -115.12093260884286 },\n  { \"lat\": 35.95927855835044, \"lng\": -115.1208682358265 },\n  { \"lat\": 35.959312209969006, \"lng\": -115.12073546648027 },\n  { \"lat\": 35.959343690502415, \"lng\": -115.12069523334505 },\n  { \"lat\": 35.959372999953274, \"lng\": -115.1206348836422 },\n  { \"lat\": 35.959400138324, \"lng\": -115.12055307626727 },\n  { \"lat\": 35.95941967794515, \"lng\": -115.12048602104188 },\n  { \"lat\": 35.95943270435655, \"lng\": -115.12042298913003 },\n  { \"lat\": 35.95945115843571, \"lng\": -115.12035191059114 },\n  { \"lat\": 35.9594739546452, \"lng\": -115.12029424309732 },\n  { \"lat\": 35.95950326404771, \"lng\": -115.12020304799081 },\n  { \"lat\": 35.95953365897216, \"lng\": -115.12007966637614 },\n  { \"lat\": 35.95955862622278, \"lng\": -115.12004882097246 },\n  { \"lat\": 35.95958576452974, \"lng\": -115.11997640132905 },\n  { \"lat\": 35.9596020475094, \"lng\": -115.11991471052171 },\n  { \"lat\": 35.959617244954096, \"lng\": -115.1198597252369 },\n  { \"lat\": 35.959630271332934, \"lng\": -115.11981010437013 },\n  { \"lat\": 35.959611003146804, \"lng\": -115.11979535222055 },\n  { \"lat\": 35.95959363463699, \"lng\": -115.11978998780252 },\n  { \"lat\": 35.959564325268005, \"lng\": -115.11977054178716 },\n  { \"lat\": 35.95955129887831, \"lng\": -115.1197635009885 },\n  { \"lat\": 35.95953257343934, \"lng\": -115.11974941939117 },\n  { \"lat\": 35.959521175343895, \"lng\": -115.1197360083461 },\n  { \"lat\": 35.95950760618048, \"lng\": -115.11973265558484 },\n  { \"lat\": 35.95948698104765, \"lng\": -115.11971723288299 },\n  { \"lat\": 35.95945197258616, \"lng\": -115.11968906968833 },\n  { \"lat\": 35.95943921756144, \"lng\": -115.11968001723292 },\n  { \"lat\": 35.959433247123656, \"lng\": -115.1196773350239 },\n  { \"lat\": 35.95942917637034, \"lng\": -115.11967163532972 },\n  { \"lat\": 35.95941777825996, \"lng\": -115.11966358870269 },\n  { \"lat\": 35.95940909398428, \"lng\": -115.11966057121754 },\n  { \"lat\": 35.95940095247498, \"lng\": -115.11965453624727 },\n  { \"lat\": 35.959394439266916, \"lng\": -115.11965051293375 },\n  { \"lat\": 35.95938819744202, \"lng\": -115.11964213103057 },\n  { \"lat\": 35.95937924177937, \"lng\": -115.11963307857515 },\n  { \"lat\": 35.95936675812667, \"lng\": -115.11962469667198 },\n  { \"lat\": 35.959359430764415, \"lng\": -115.11962033808233 },\n  { \"lat\": 35.95934884679548, \"lng\": -115.11961329728368 },\n  { \"lat\": 35.959318994567774, \"lng\": -115.11958915740253 },\n  { \"lat\": 35.95930732505751, \"lng\": -115.11957943439485 },\n  { \"lat\": 35.95929402724141, \"lng\": -115.1195673644543 },\n  { \"lat\": 35.95925657623703, \"lng\": -115.11954121291639 },\n  { \"lat\": 35.95921749690919, \"lng\": -115.11950835585594 },\n  { \"lat\": 35.95911464219698, \"lng\": -115.11942654848102 },\n  { \"lat\": 35.95909401696152, \"lng\": -115.11941481381658 },\n  { \"lat\": 35.95907719110756, \"lng\": -115.11940073221923 },\n  { \"lat\": 35.959068506794424, \"lng\": -115.1193953678012 },\n  { \"lat\": 35.959050324010725, \"lng\": -115.11937927454711 },\n  { \"lat\": 35.9590359406117, \"lng\": -115.11937323957682 },\n  { \"lat\": 35.9590269849091, \"lng\": -115.1193628460169 },\n  { \"lat\": 35.95901124458085, \"lng\": -115.11935546994211 },\n  { \"lat\": 35.95899794671488, \"lng\": -115.11933870613575 },\n  { \"lat\": 35.958972707901864, \"lng\": -115.11932093650104 },\n  { \"lat\": 35.95895099708855, \"lng\": -115.11930484324695 },\n  { \"lat\": 35.95893227150724, \"lng\": -115.11928908526899 },\n  { \"lat\": 35.95890187635134, \"lng\": -115.11926896870139 },\n  { \"lat\": 35.958883964914705, \"lng\": -115.11925488710405 },\n  { \"lat\": 35.95887148118374, \"lng\": -115.11924549937251 },\n  { \"lat\": 35.95885031311371, \"lng\": -115.11923208832742 },\n  { \"lat\": 35.95881069081348, \"lng\": -115.1192042604089 },\n  { \"lat\": 35.95879603598505, \"lng\": -115.11919420212509 },\n  { \"lat\": 35.95878056699658, \"lng\": -115.11918213218453 },\n  { \"lat\": 35.958759941673875, \"lng\": -115.11916335672142 },\n  { \"lat\": 35.958747457923295, \"lng\": -115.1191479340196 },\n  { \"lat\": 35.95873497417075, \"lng\": -115.11914022266865 },\n  { \"lat\": 35.958708649729594, \"lng\": -115.11912010610104 },\n  { \"lat\": 35.958680425576716, \"lng\": -115.11910133063795 },\n  { \"lat\": 35.95866631349651, \"lng\": -115.11909026652576 },\n  { \"lat\": 35.95863266160276, \"lng\": -115.11905372142793 },\n  { \"lat\": 35.95859575305764, \"lng\": -115.11904299259187 },\n  { \"lat\": 35.95858706869157, \"lng\": -115.11901617050172 },\n  { \"lat\": 35.95855016012515, \"lng\": -115.11898934841157 },\n  { \"lat\": 35.9585338769286, \"lng\": -115.11897861957551 },\n  { \"lat\": 35.95851650818189, \"lng\": -115.11896252632143 },\n  { \"lat\": 35.95849371169608, \"lng\": -115.11894106864929 },\n  { \"lat\": 35.958477428487875, \"lng\": -115.11892899870875 },\n  { \"lat\": 35.95846765856135, \"lng\": -115.11892497539522 },\n  { \"lat\": 35.95845028980009, \"lng\": -115.11890619993213 },\n  { \"lat\": 35.95841338116975, \"lng\": -115.11887803673746 },\n  { \"lat\": 35.95811702595377, \"lng\": -115.11865809559824 },\n  { \"lat\": 35.95807143274493, \"lng\": -115.11862993240358 },\n  { \"lat\": 35.958056235002786, \"lng\": -115.11862456798555 },\n  { \"lat\": 35.95797698958574, \"lng\": -115.11857628822327 },\n  { \"lat\": 35.957945508507585, \"lng\": -115.11855214834216 },\n  { \"lat\": 35.957917284082015, \"lng\": -115.11852130293846 },\n  { \"lat\": 35.95787386186914, \"lng\": -115.11848643422128 },\n  { \"lat\": 35.957813070730985, \"lng\": -115.11845558881761 },\n  { \"lat\": 35.957766391789605, \"lng\": -115.11842340230943 },\n  { \"lat\": 35.95772514060913, \"lng\": -115.11838719248772 },\n  { \"lat\": 35.95770125833688, \"lng\": -115.1183630526066 },\n  { \"lat\": 35.957644809301094, \"lng\": -115.11832818388942 },\n  { \"lat\": 35.95761767032724, \"lng\": -115.1183094084263 },\n  { \"lat\": 35.95757641906908, \"lng\": -115.11828124523164 },\n  { \"lat\": 35.9575319111085, \"lng\": -115.118255764246 },\n  { \"lat\": 35.957485232000934, \"lng\": -115.11821687221529 },\n  { \"lat\": 35.957449408481075, \"lng\": -115.11819943785667 },\n  { \"lat\": 35.957401643762644, \"lng\": -115.1181618869305 },\n  { \"lat\": 35.95735062232698, \"lng\": -115.11813506484032 },\n  { \"lat\": 35.95731588430936, \"lng\": -115.11811494827272 },\n  { \"lat\": 35.95727680402129, \"lng\": -115.11808007955553 },\n  { \"lat\": 35.957226868069476, \"lng\": -115.11804521083832 },\n  { \"lat\": 35.957185616607234, \"lng\": -115.11802643537523 },\n  { \"lat\": 35.95714110842643, \"lng\": -115.11798888444902 },\n  { \"lat\": 35.95709985691938, \"lng\": -115.11797010898592 }\n]\n","import SmoothMarker from \"../Marker\";\nimport { sleep } from \"../utils\";\nimport fakeMapPoints from \"./fakeData.json\";\n\nconst startPosition = new google.maps.LatLng(\n  fakeMapPoints[0].lat,\n  fakeMapPoints[0].lng\n);\n\n/* init map */\nconst map = new google.maps.Map(document.getElementById(\"map\") as HTMLElement, {\n  center: startPosition,\n  zoom: 18,\n});\n\n/* Our Marker */\nlet marker = new SmoothMarker({\n  map,\n  position: startPosition,\n  durationMs: 80,\n});\n\n(async function simulateMovingDevice(marker: SmoothMarker) {\n  for (const nextPoint of fakeMapPoints) {\n    const newPosition = new google.maps.LatLng(nextPoint.lat, nextPoint.lng);\n\n    marker.animatedSetPosition(newPosition);\n\n    /* simulate device send interval and network latency */\n    await sleep(100);\n  }\n})(marker);\n"],"names":["$parcel$interopDefault","a","__esModule","default","Denque","array","this","_head","_tail","_capacityMask","_list","Array","isArray","_fromArray","prototype","peekAt","index","i","len","size","get","peek","peekFront","peekBack","Object","defineProperty","unshift","item","undefined","length","_growArray","shift","head","_shrinkArray","push","tail","pop","removeOne","k","remove","count","removed","del_count","toArray","clear","splice","arguments","temp","arg_len","arguments_index","leng","isEmpty","_copyArray","fullCopy","newArray","list","$c165ac2f5b664cb824ec02f770$exports","gmaps","google","maps","gInterpolate","geometry","spherical","interpolate","computeDistanceBetween","sleep","ms","Promise","resolve","setTimeout","icon","path","scale","fillColor","fillOpacity","strokeWeight","strokeOpacity","anchor","Point","Marker","$e9ecf146fcf101129057de6ef72de10$export$gmaps","constructor","durationMs","hasTrailLine","options","$e9ecf146fcf101129057de6ef72de10$export$icon","super","currentDestination","trailLine","initTrailLine","bigSteps","$c165ac2f5b664cb824ec02f770$$interop$default","increamentByFraction","loopIndex","loopIndexInitState","animatedSetPosition","nextStep","animate","_this$currentDestinat","start","getPosition","end","smallStep","$e9ecf146fcf101129057de6ef72de10$export$gInterpolate","move","requestAnimationFrame","bind","position","changeDirection","setPosition","drawPath","newPosition","currentPosition","getIcon","rotation","computeHeading","setIcon","newPath","getPath","setPath","Polyline","map","getMap","JSON","parse","startPosition","LatLng","$cbb5923afdf364e0a3a907d6520a96ce$$interop$default","lat","lng","marker","nextPoint","$e9ecf146fcf101129057de6ef72de10$export$sleep","$f8301e7c77394234d66feae507c689ff$export$default","Map","document","getElementById","center","zoom"],"version":3,"file":"demo.199c88c9.js.map"}